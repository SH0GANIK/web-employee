
services:
  app:
    image: web-employee:local
    container_name: web-employee_container
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - web-employee-network


  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --auth-host=trust
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U employee-user -d employee"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - web-employee-network


  migrator:
    image: migrator
    container_name: migrate_container
    depends_on:
      - postgres
    restart: on-failure
    networks:
      - web-employee-network

volumes:
  postgres_volume:

networks:
  web-employee-network: